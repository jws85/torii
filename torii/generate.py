import json

from jinja2 import ChainableUndefined, Environment, FileSystemLoader, select_autoescape
from os.path import expanduser, exists, split

def generate(template_filename, json_filename):
    '''
    Take in template_filename and apply the values in json_filename to it.

    :param template_filename: A Jinja2 template
    :param json_filename: A file containing JSON to apply to the template
    :returns: The filled-out template as a string
    :raises FileNotFoundError:
    '''
    template_path = expanduser(template_filename)
    if not exists(template_path):
        raise FileNotFoundError(template_path)

    json_path = expanduser(json_filename)
    if not exists(json_path):
        raise FileNotFoundError(json_path)

    conf_path, template_file = split(template_path)
    env = Environment(
        loader = FileSystemLoader(conf_path, followlinks=True),
        undefined = ChainableUndefined,
        autoescape = select_autoescape([])
    )

    with open(json_path) as fh:
        env.globals = json.load(fh)
        template = env.get_template(template_file)
        warning = '# ACHTUNG: This file is automatically generated, please do not edit it!'
        return warning + '\n' + template.render()

    fh.close()
